# -*- coding: utf-8 -*-
"""House_price_prediciton.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IeVpg8Irox8rFrA_SY4mEL0iOjry7Lyx
"""

# Commented out IPython magic to ensure Python compatibility.
# import depedencies 
import pandas as pd 
import numpy as np
import seaborn as sns 
from matplotlib import pyplot as plt 
from sklearn.model_selection import train_test_split
from sklearn.datasets import load_boston
from xgboost import XGBRegressor
# %matplotlib inline

# load the data 
house = load_boston()
print(house)

dataset = pd.DataFrame(house.data)

dataset.columns = [house.feature_names]

dataset.head()

dataset['price'] = house.target

dataset.head()

dataset.drop(columns = ['price'],inplace = True)

dataset.head()

dataset.isnull().sum()

sns.set(rc={'figure.figsize':{10,5}})
plt.hist(x = dataset,bins = 20)
plt.title('Histogram of all dataset')
plt.show()

X = dataset.drop(columns = ['target'],axis = 1)

Y = dataset[['target']]

print(X)

print(Y)

X_train,X_test,Y_train,Y_test = train_test_split(X,Y,random_state=2,test_size =0.2)

model = XGBRegressor()

model.fit(X_train,Y_train)

train_prediction = model.predict(X_train)
test_prediction = model.predict(X_test)

from sklearn import metrics

score1 = metrics.r2_score(Y_train,train_prediction)

print(score1)

score2 = metrics.mean_absolute_error(Y_train,train_prediction)

print(score2)

plt.scatter(Y_train,train_prediction)
plt.title('train_prediction VS actual_value')
plt.show()